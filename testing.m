clear L
deg = pi/180;

% Mobile base - 3 DOF
L(1) = Prismatic('theta', 0, ...
    'a', 0, ...
    'alpha', 0, ...
    'm', 5, ...
    'qlim', [-1 1]);  % x translation

L(2) = Prismatic('theta', 0, ...
    'a', 0, ...
    'alpha', 0, ...
    'm', 5, ...
    'qlim', [-1 1]);  % y translation

L(3) = Revolute('d', 0, ...
    'a', 0, ...
    'alpha', 0, ...
    'm', 1, ...
    'qlim', [-pi pi]);  % yaw rotation

% Now shift all your existing 6 DOF up by 3
% Original Link 1 becomes L(4), Link 2 becomes L(5), etc.

L(4) = Revolute('d', 0.15, ...
    'a', 0.05, ...
    'alpha', pi/2, ...
    'I', [0.01, 0.01, 0.005, 0, 0, 0], ...
    'r', [0, -0.025, 0.02], ...
    'm', 2.5, ...
    'Jm', 200e-6, ...
    'G', -50, ...
    'B', 1e-3, ...
    'Tc', [0.1, -0.1], ...
    'qlim', [-180 180]*deg);

L(5) = Revolute('d', 0, ...
    'a', 0.3, ...
    'alpha', 0, ...
    'I', [0.02, 0.02, 0.01, 0, 0, 0], ...
    'r', [-0.15, 0, 0.02], ...
    'm', 3.0, ...
    'Jm', 150e-6, ...
    'G', 100, ...
    'B', 0.8e-3, ...
    'Tc', [0.05, -0.05], ...
    'qlim', [-90 90]*deg);

L(6) = Revolute('d', 0.1, ...
    'a', 0.02, ...
    'alpha', -pi/2, ...
    'I', [0.015, 0.015, 0.005, 0, 0, 0], ...
    'r', [0, 0.01, 0.03], ...
    'm', 2.0, ...
    'Jm', 100e-6, ...
    'G', -75, ...
    'B', 1.2e-3, ...
    'Tc', [0.06, -0.06], ...
    'qlim', [-135 135]*deg);

L(7) = Revolute('d', 0.25, ...
    'a', 0, ...
    'alpha', pi/2, ...
    'I', [0.005, 0.005, 0.002, 0, 0, 0], ...
    'r', [0, -0.015, 0], ...
    'm', 1.0, ...
    'Jm', 50e-6, ...
    'G', 80, ...
    'B', 60e-6, ...
    'Tc', [0.01, -0.01], ...
    'qlim', [-180 180]*deg);

L(8) = Revolute('d', 0, ...
    'a', 0, ...
    'alpha', -pi/2, ...
    'I', [0.003, 0.003, 0.001, 0, 0, 0], ...
    'r', [0, 0, 0.01], ...
    'm', 0.8, ...
    'Jm', 33e-6, ...
    'G', 70, ...
    'B', 50e-6, ...
    'Tc', [0.008, -0.008], ...
    'qlim', [-180 180]*deg);

L(9) = Revolute('d', 0.05, ...
    'a', 0, ...
    'alpha', 0, ...
    'I', [0.002, 0.002, 0.001, 0, 0, 0], ...
    'r', [0, 0, 0.02], ...
    'm', 0.5, ...
    'Jm', 25e-6, ...
    'G', 60, ...
    'B', 40e-6, ...
    'Tc', [0.005, -0.005], ...
    'qlim', [-270 270]*deg);

% Useful poses
qz = zeros(1, 9);  % all joints at 0
qr = [0 0 0 0 pi/2 -pi/2 0 0 0];
qs = [0 0 0 0 0 -pi/2 0 0 0];
qn = [0 0 0 0 pi/4 pi/4 0 pi/4 0];

myrobot = SerialLink(L, 'name', 'MyMobileArm9DOF', ...
    'configs', {'qz', qz, 'qr', qr, 'qs', qs, 'qn', qn}, ...
    'manufacturer', 'MyLab', ...
    'comment', 'custom 9DOF mobile manipulator');

myrobot.model3d = 'Custom/9DOF';

clear L
