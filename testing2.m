%MDL_MYROBOT Create model of custom 6-DOF robotic arm
%
% MDL_MYROBOT is a script that creates the workspace variable myrobot which
% describes the kinematic and dynamic characteristics of a custom 6-DOF manipulator
% using standard DH conventions. 
%
% Also define the workspace vectors:
%   qz         zero joint angle configuration
%   qr         vertical 'READY' configuration
%   qs         stretched pose
%   qn         nominal non-singular configuration
%
% Notes::
% - SI units are used.
% - You should replace the estimates with actual values from your design.
%
% See also SerialLink, Revolute.

% MODEL: Custom, 6DOF, dynamics, standard_DH

clear L
deg = pi/180;

% Link 1
L(1) = Revolute('d', 0.15, ...
    'a', 0.05, ...
    'alpha', pi/2, ...
    'I', [0.01, 0.01, 0.005, 0, 0, 0], ...
    'r', [0, -0.025, 0.02], ...
    'm', 2.5, ...
    'Jm', 200e-6, ...
    'G', -50, ...
    'B', 1e-3, ...
    'Tc', [0.1, -0.1], ...
    'qlim', [-180 180]*deg);

% Link 2
L(2) = Revolute('d', 0, ...
    'a', 0.3, ...
    'alpha', 0, ...
    'I', [0.02, 0.02, 0.01, 0, 0, 0], ...
    'r', [-0.15, 0, 0.02], ...
    'm', 3.0, ...
    'Jm', 150e-6, ...
    'G', 100, ...
    'B', 0.8e-3, ...
    'Tc', [0.05, -0.05], ...
    'qlim', [-90 90]*deg);

% Link 3
L(3) = Revolute('d', 0.1, ...
    'a', 0.02, ...
    'alpha', -pi/2, ...
    'I', [0.015, 0.015, 0.005, 0, 0, 0], ...
    'r', [0, 0.01, 0.03], ...
    'm', 2.0, ...
    'Jm', 100e-6, ...
    'G', -75, ...
    'B', 1.2e-3, ...
    'Tc', [0.06, -0.06], ...
    'qlim', [-135 135]*deg);

% Link 4
L(4) = Revolute('d', 0.25, ...
    'a', 0, ...
    'alpha', pi/2, ...
    'I', [0.005, 0.005, 0.002, 0, 0, 0], ...
    'r', [0, -0.015, 0], ...
    'm', 1.0, ...
    'Jm', 50e-6, ...
    'G', 80, ...
    'B', 60e-6, ...
    'Tc', [0.01, -0.01], ...
    'qlim', [-180 180]*deg);

% Link 5
L(5) = Revolute('d', 0, ...
    'a', 0, ...
    'alpha', -pi/2, ...
    'I', [0.003, 0.003, 0.001, 0, 0, 0], ...
    'r', [0, 0, 0.01], ...
    'm', 0.8, ...
    'Jm', 33e-6, ...
    'G', 70, ...
    'B', 50e-6, ...
    'Tc', [0.008, -0.008], ...
    'qlim', [-180 180]*deg);

% Link 6
L(6) = Revolute('d', 0.05, ...
    'a', 0, ...
    'alpha', 0, ...
    'I', [0.002, 0.002, 0.001, 0, 0, 0], ...
    'r', [0, 0, 0.02], ...
    'm', 0.5, ...
    'Jm', 25e-6, ...
    'G', 60, ...
    'B', 40e-6, ...
    'Tc', [0.005, -0.005], ...
    'qlim', [-270 270]*deg);

% Useful poses
qz = [0 0 0 0 0 0];
qr = [0 pi/2 -pi/2 0 0 0];
qs = [0 0 -pi/2 0 0 0];
qn = [0 pi/4 pi/4 0 pi/4 0];

myrobot = SerialLink(L, 'name', 'MyRobot6DOF', ...
    'configs', {'qz', qz, 'qr', qr, 'qs', qs, 'qn', qn}, ...
    'manufacturer', 'MyLab', ...
    'comment', 'custom 6DOF robot with estimated dynamic parameters');

myrobot.model3d = 'Custom/6DOF';  % adjust to match your visualization model if needed

clear L
